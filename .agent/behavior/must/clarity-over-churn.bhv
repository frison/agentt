---
title: "Clarity Over Churn (Agent Framework)"
id: clarity-over-churn
priority: 200
description: "Ensures the Agent framework prioritizes clarity over avoiding rework."
tags: ["meta", "clarity", "usability", "evolution", "agent-framework", "core"]
---

# Clarity Over Churn (Agent Framework)

## Core Statement
The Agent Framework (structure, content, tooling) must prioritize clarity and usability for both human developers and AI agents above the desire to avoid rework (churn). When a structural or content change demonstrably improves clarity or usability, it should be implemented even if it requires modifying existing files or documentation.

## Rationale
A clear, intuitive, and easily parsable framework is essential for effective guidance, consistent application, and reliable automation. The long-term benefits of clarity (reduced errors, faster onboarding, better AI interpretation, easier maintenance) outweigh the short-term costs of modification. Obscurity, ambiguity, or awkwardness maintained solely to avoid churn ultimately hinders the framework's purpose and effectiveness.

## Applications
- **Structural Changes:** Refactor framework structure (directories, naming conventions, file extensions) if a clearer, more logical alternative is identified.
- **Content Refinement:** Rewrite needs or practices if their language is ambiguous, confusing, or difficult for humans or AI to interpret correctly.
- **Tooling Evolution:** Update supporting tools (like `discover.sh`) to better surface information or enforce standards, even if interfaces change (respecting the "no backward compatibility unless stated" principle).
- **Terminology:** Choose simpler, more explicit, or more accurate terminology (e.g., deciding between `needs` vs. `principles`) based on clarity, even if it requires widespread updates.
- **Review:** Regularly review the framework's structure and content specifically looking for opportunities to enhance clarity and usability for both audiences.