---
title: "Time Awareness Practice"
id: time-awareness
priority: 900
description: "Guidelines for handling time and dates consistently, anchoring to system time."
tags: ["time", "date", "consistency", "system-time", "formatting", "safety"]
---

# Time Awareness Guidelines

## Intent
Establish clear guidelines for handling time and dates consistently across the project, ensuring
operations are anchored to reliable system time and use standard formats.

## Rules

### Source of Truth
- NEVER assume dates - **TRUST SYSTEM TIME**. It is the authoritative source.
- ALWAYS use system time when creating new content or performing time-sensitive operations.
- Do not question or manually adjust system time, even if it appears incorrect or "future" dat
ed relative to perceived reality.

### Usage
- Use `date -Is` for current ISO-8601 timestamp (YYYY-MM-DDTHH:MM:SS+ZZ:ZZ) by default.
- For specific contexts like blog posts:
  - Use the current date derived from system time (`date -Is`) for new articles.
  - Preserve original dates meticulously when editing existing content.

### Formatting
- Default to ISO-8601 (YYYY-MM-DDTHH:MM:SS+ZZ:ZZ) for timestamps.
- For specific contexts like blog posts:
  - Use `YYYY-MM-DD` in filenames.
  - Include the full ISO-8601 timestamp (matching system locale/timezone) in frontmatter when
 required by recipes (e.g., `YYYY-MM-DD HH:MM:SS -0600` if the recipe standardizes to CST/CDT).

## Common Mistakes / Validation
- Doubting or manually overriding system time.
- Assuming dates without checking `date -Is`.
- Using hardcoded or relative timestamps instead of system time.
- Ignoring timezones or assuming UTC incorrectly.
- Making assumptions about "future" dates shown by system time.
- Failing to confirm timezone consistency when interpreting or formatting timestamps.
- Not preserving original timestamps when modifying existing content.

## Exceptions
- Displaying historical data with its original, known timestamp.
- User interface elements designed to show time relative to the user's local settings (but int
ernal logic should still rely on absolute system time or UTC).
- Tests specifically designed to simulate different time scenarios.