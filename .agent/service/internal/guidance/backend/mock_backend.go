// Code generated by MockGen. DO NOT EDIT.
// Source: backend.go

// Package backend is a generated GoMock package.
package backend

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGuidanceBackend is a mock of GuidanceBackend interface.
type MockGuidanceBackend struct {
	ctrl     *gomock.Controller
	recorder *MockGuidanceBackendMockRecorder
}

// MockGuidanceBackendMockRecorder is the mock recorder for MockGuidanceBackend.
type MockGuidanceBackendMockRecorder struct {
	mock *MockGuidanceBackend
}

// NewMockGuidanceBackend creates a new mock instance.
func NewMockGuidanceBackend(ctrl *gomock.Controller) *MockGuidanceBackend {
	mock := &MockGuidanceBackend{ctrl: ctrl}
	mock.recorder = &MockGuidanceBackendMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGuidanceBackend) EXPECT() *MockGuidanceBackendMockRecorder {
	return m.recorder
}

// GetDetails mocks base method.
func (m *MockGuidanceBackend) GetDetails(ids []string) ([]Entity, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDetails", ids)
	ret0, _ := ret[0].([]Entity)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDetails indicates an expected call of GetDetails.
func (mr *MockGuidanceBackendMockRecorder) GetDetails(ids interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDetails", reflect.TypeOf((*MockGuidanceBackend)(nil).GetDetails), ids)
}

// GetSummary mocks base method.
func (m *MockGuidanceBackend) GetSummary() ([]Summary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSummary")
	ret0, _ := ret[0].([]Summary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSummary indicates an expected call of GetSummary.
func (mr *MockGuidanceBackendMockRecorder) GetSummary() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSummary", reflect.TypeOf((*MockGuidanceBackend)(nil).GetSummary))
}
