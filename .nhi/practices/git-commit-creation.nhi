---
title: "Git Commit Creation Practice"
priority: 502
tier: practice
description: "Steps and patterns for creating high-quality, well-formatted git commits."
tags: ["git", "version-control", "workflow", "collaboration"]
---

# Git Commit Creation

## When to Apply
Apply these patterns whenever creating git commits to document changes to the codebase.

## Actions
- **Create well-structured commit message**:
  ```bash
  # Create commit message file
  cat > .nhi/tmp/commit_msg.txt << 'EOF'
  Add feature X to component Y

  This change implements feature X which allows users to:
  - Benefit A
  - Benefit B

  The implementation uses approach Z because it provides
  better performance while maintaining code readability.

  Refs: #123
  Category: feature
  EOF

  # Commit with the message
  git commit -F .nhi/tmp/commit_msg.txt
  rm .nhi/tmp/commit_msg.txt
  ```

- **Annotate commit with NHI commentary**:
  ```bash
  # Extract current commit message
  git log -1 --pretty=format:"%s%n%n%b" > .nhi/tmp/commit_msg.txt

  # Add NHI annotation
  cat >> .nhi/tmp/commit_msg.txt << 'EOF'

  -- NHI annotation

  Context and Decisions:
  - Selected algorithm X over Y due to O(log n) vs O(n) complexity
  - Placed logic in service layer to maintain separation of concerns
  - Added extra validation to prevent edge case Z

  Sentiment and Commentary:
  - Performance-focused implementation
  - Forward-looking architecture that anticipates feature growth
  - Conservative approach to error handling
  EOF

  # Amend commit with annotation
  git commit --amend -F .nhi/tmp/commit_msg.txt
  rm .nhi/tmp/commit_msg.txt
  ```

- **Verify commit quality**:
  ```bash
  # Check title length (should be under 50 chars)
  title_len=$(git log -1 --pretty=%s | wc -c)
  if [ "$title_len" -gt 50 ]; then
    echo "⚠️ Commit title too long: $title_len chars (max 50)"
  fi

  # Check if body exists
  body_lines=$(git log -1 --pretty=%b | wc -l)
  if [ "$body_lines" -lt 2 ]; then
    echo "⚠️ Commit body too short or missing"
  fi
  ```

## Common Pitfalls
- Using past tense instead of imperative mood in title
- Creating a title longer than 50 characters
- Omitting the blank line after the title
- Not explaining why the change was made
- Focusing on implementation details rather than motivation
- Forgetting to reference related issues
- Not separating NHI annotations with the proper format