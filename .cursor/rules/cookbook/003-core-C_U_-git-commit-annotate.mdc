---
description: Guidelines for adding NHI commentary the most recent local commit
globs: []
alwaysApply: false
---
# Git Commit Annotation

## Required Sequence
1. STOP - Do not proceed until completing these steps
2. Verify you are in project root directory
3. Check all prerequisites are met
4. Follow steps in exact order

## Prerequisites
- STOP - Verify project root directory before ANY operations
- Git installed and configured
- Unpushed commit exists
- Read [Git Commit Message](002-core-C_U_-git-commit-message.mdc)
- Read [Writing for Public Consumption](900-core-C_U_-writing-for-public-consumption.mdc)

## Directory Context
1. MUST be in project root (parent of .cursor/)
2. Verify:
   ```bash
   test -d .cursor || { echo "Not in project root"; exit 1; }
   ```
3. Required paths (all relative to root):
   - `.cursor/tmp/`: Temporary file storage
   - `.git/`: Repository metadata

## Steps
1. Verify prerequisites (REQUIRED):
   ```bash
   test -d .cursor || { echo "Not in project root"; exit 1; }
   git rev-parse --git-dir > /dev/null 2>&1 || {
       echo "❌ Not in a git repository"
       exit 1
   }
   git log @{u}..HEAD --oneline > /dev/null 2>&1 || {
       echo "❌ No unpushed commits"
       exit 1
   }
   ```

2. Extract commit message (REQUIRED):
   ```bash
   git log -1 --pretty=format:"%s%n%n%b" > .cursor/tmp/commit_msg.txt
   ```

3. Add annotation (REQUIRED):
   ```bash
   cat >> .cursor/tmp/commit_msg.txt << 'EOF'

-- NHI annotation

Context and Decisions:
<key technical decisions>

Sentiment and Commentary:
<tone and motivation analysis>
EOF
   ```

4. Apply annotation (REQUIRED):
   ```bash
   git commit --amend -F .cursor/tmp/commit_msg.txt
   rm .cursor/tmp/commit_msg.txt
   ```

## Annotation Structure
1. Separator (REQUIRED):
   - Double newline before
   - Use "-- NHI annotation"
   - Single newline after

2. Context and Decisions (REQUIRED):
   - Key technical choices
   - Implementation rationale
   - Alternative considerations
   - Impact assessment

3. Sentiment and Commentary (REQUIRED):
   - Tone analysis
   - Motivation insights
   - Concerns or enthusiasm
   - Future implications

## Common Mistakes
❌ NEVER:
- Skip project root verification
- Modify original message
- Remove required sections
- Add content before separator
- Mix technical and sentiment
- Exceed line length limits

✅ ALWAYS:
- Verify project root first
- Preserve original message
- Use proper separator
- Include both sections
- Keep factual tone
- Follow 72 char limit

## Example
```bash
# REQUIRED - Verify project root
test -d .cursor || { echo "Not in project root"; exit 1; }

# Create annotation
cat > .cursor/tmp/commit_msg.txt << 'EOF'
Add user authentication to API

Implement JWT-based authentication to secure API endpoints.
This change is required for GDPR compliance and improves
overall system security.

-- NHI annotation

Context and Decisions:
- Chose JWT for stateless authentication
- Implemented in middleware layer
- Added rate limiting for security

Sentiment and Commentary:
- Security-focused implementation
- Proactive compliance approach
- Strong emphasis on best practices
EOF

git commit --amend -F .cursor/tmp/commit_msg.txt
rm .cursor/tmp/commit_msg.txt
```

## Maintenance
- Keep examples up to date
- Update annotation format if standards change
- Add new sections as needed
- Remove obsolete troubleshooting steps
- Document new common mistakes