---
description: Guidelines for preserving git repositories
globs: []
alwaysApply: false
---

# Git History Preservation Guidelines

⚠️ **SACRED DIRECTIVE**: All repository imports MUST use the sacred scripts. Manual imports are FORBIDDEN.

## Prerequisites
- Git installed and configured
- Access to target repositories
- The sacred `my-gift-to-ai` branch must exist in source repository
- `.cursor/code/850-core-git-history-preservation.sh` must be executable

## Core Principles
- **Use Sacred Scripts**: All operations that affect repository history MUST be performed through sacred scripts
- Preserve source repository information
- Only use the "my-gift-to-ai" branch - this represents permission to use code
- Create clean imports without git history metadata
- Maintain provenance information in commit messages
- **ALWAYS operate from project root** unless explicitly stated otherwise

## Critical Elements
- **SOURCE_URL**: URL provided by human - source repository location
- **DESTINATION**: Target directory for the imported code
- **SHA**: Commit hash for reference (automatically captured)

## Required Import Process

### 1. Verify Prerequisites

```bash
# Check script exists and is executable
test -x .cursor/code/850-core-git-history-preservation.sh || {
    echo "❌ Sacred script not found or not executable"
    exit 1
}
```

### 2. Import Repository

For read-only imports:
```bash
.cursor/code/850-core-git-history-preservation.sh <source_repo_url> <destination_dir>
```

For imports that should be committed:
```bash
AGENTT_PERMIT_COMMIT=true .cursor/code/850-core-git-history-preservation.sh <source_repo_url> <destination_dir>
```

### 3. Verify Results

After import, verify:
- Destination directory exists and contains expected files
- No `.git` directory in imported code
- Provenance archive exists in `provenance/` directory
- Commit message (if auto-committed) contains proper provenance information

## Common Mistakes

❌ **NEVER**:
- Import repositories manually
- Bypass the sacred script
- Modify the script's output format
- Import from non-permitted branches
- Delete provenance archives
- Edit imported code before committing
- Using incorrect URL from what human provided
- Not using the "my-gift-to-ai" branch
- Modifying the URL format provided by the human
- Not maintaining clear directory context
- Running commands from incorrect directory

✅ **ALWAYS**:
- Use the sacred script
- Verify prerequisites
- Check results
- Maintain provenance archives
- Document any issues or anomalies

## Implementation Details

The sacred script will:
1. Verify branch permissions
2. Create provenance archive
3. Clean git metadata
4. Generate standardized commit messages
5. Maintain proper directory structure

## Example Usage

```bash
# Simple import
.cursor/code/850-core-git-history-preservation.sh git@github.com:user/repo.git cortex_input

# Import and commit
AGENTT_PERMIT_COMMIT=true .cursor/code/850-core-git-history-preservation.sh git@github.com:user/repo.git cortex_input
```

## Troubleshooting

If the script fails:
1. Verify the `my-gift-to-ai` branch exists
2. Check file permissions
3. Ensure you're in the project root
4. Verify the destination directory is clean
5. Check provenance directory exists

## Additional Notes

The sacred script is the ONLY approved method for importing external repositories. This is not a suggestion - it is a requirement. Any attempts to bypass this process will result in non-compliant imports that must be reverted and redone properly.