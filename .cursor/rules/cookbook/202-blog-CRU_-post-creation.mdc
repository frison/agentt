---
description: Recipe for creating, reading, and updating blog posts with consistent structure and provenance
globs: ["blog/content/*.md"]
alwaysApply: false
---
# Blog Post Creation and Updates

## Prerequisites
- Adherence to NHI Framework guidelines (check MUST and SHOULD for relevant rules, e.g., time formatting)
- [Blog Directory Structure](../200-blog-_R__-directories.mdc)
- [Writing for Public Consumption](900-core-C_U_-writing-for-public-consumption.mdc)
- [Article Provenance](201-blog-_RU_-article-provenance.mdc)

## File Structure
1. Name: `YYYY-MM-DD-kebab-case-title.md` (where `YYYY-MM-DD` is derived from current system time per the Time Awareness Directive)
2. Location: `blog/content/_posts/` directory

## Frontmatter Format
```yaml
---
layout: default
title: Your Title Here
date: YYYY-MM-DD HH:MM:SS -0600 # Derived from current system time & formatted to CST/CDT per Time Awareness Directive
categories:
  - category1
  - category2
  - category3
---
```

Notes on frontmatter:
- Title uses hyphens instead of colons for separators
- Date includes time and timezone (standardized to -0600), derived from system time.
- Categories are listed as YAML array items with hyphens
- Category names use hyphens instead of spaces
- No quotes around any values
- Optionally add relevant emojis to the title for increased visibility and engagement

## Content Structure
1. **Introduction**
   - No heading
   - Sets context
   - Clear problem statement
   - Consider adding a conversational hook or humor to engage readers

2. **Main Sections**
   - Use H2 (`##`) headings
   - Descriptive section titles
   - Double newline between sections
   - Code blocks with language specification
   ```language
   code here
   ```
   - Optionally add relevant emojis to section headings for visual signposting
   - Include occasional humor or relevant asides in parentheses for engagement

3. **Conclusion**
   - H2 heading (typically "Looking Forward")
   - Summarize key points
   - Future implications
   - End with a memorable statement or humor to leave an impression

4. **Provenance Footer**
   - Horizontal rule separator
   - Generated after initial commit
   - Must match frontmatter exactly

## Engagement Enhancements
1. **Emoji Usage**
   - Add relevant emojis to titles and section headings
   - Use emojis as visual markers for key points or tips
   - Don't overuse; 1-2 emojis per heading is sufficient
   - Ensure emojis are relevant to technical content

2. **Humor Guidelines**
   - Use light humor that enhances rather than distracts from technical content
   - Add parenthetical asides for relatable observations
   - Include analogies that make technical concepts more accessible
   - Target a "Reddit-worthy" style that's clever without undermining credibility
   - Maintain professional tone even with humorous elements

3. **Formatting for Engagement**
   - Use bullet points for better readability
   - Add parenthetical comments for extra context or humor
   - Include "what could go wrong?" rhetorical questions for complex operations
   - Use light self-deprecation when discussing challenging implementations

## Creation Process
1. Create file with proper name (`YYYY-MM-DD-kebab-case-title.md`) in `blog/content/_posts/`.
2. Add frontmatter (basic structure, no `provenance` block yet).
3. Write content following structure.
4. Add engagement elements (emojis, humor) where appropriate.
5. Commit the initial post content:
   ```bash
   # Example commit
   git add blog/content/YYYY-MM-DD-kebab-case-title.md
   git commit -m "feat(blog): add initial draft for [topic]"
   ```
6. Add the `provenance` block and footer using the SHA from the previous commit, following the [Article Provenance Recipe](201-blog-_RU_-article-provenance.mdc).
7. Commit the provenance addition:
   ```bash
   # Example commit
   git add blog/content/YYYY-MM-DD-kebab-case-title.md
   git commit -m "docs(blog): add provenance for [topic] post"
   ```

## Validation Steps
1. **SHA Consistency**
   - Frontmatter commit SHA matches footer commit SHA.
   - Frontmatter prompt SHA matches footer prompt SHA (if different).
   - All SHAs are complete (not abbreviated).
   - SHAs correspond to the actual creation commit verifiable in git history.

2. **Content Quality**
   - No H1 headings (reserved for title)
   - Proper section spacing
   - Language-specified code blocks
   - Links use absolute URLs
   - Technical accuracy in examples
   - Emojis and humor enhance rather than detract from content

## Common Mistakes
- Inconsistent SHAs between frontmatter and footer
- Abbreviated SHAs
- Missing language in code blocks
- Incorrect heading hierarchy
- Insufficient section spacing
- Overuse of emojis that diminish readability
- Humor that undermines technical credibility
- Forgetting the second commit to add provenance.
- Adding provenance referencing the wrong commit.