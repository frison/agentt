---
description: REQUIRED rule defining the complete NHI Framework and discovery process across all tiers.
globs: []
alwaysApply: true
---
# NHI Framework Priority Enforcement

## STOP - Critical Priority Checks
- ALWAYS check NHI framework BEFORE any action
- Process tiers in strict order: MUST â†’ SHOULD
- Higher tiers override lower tiers in conflicts
- Never skip tier checking even for seemingly simple tasks

## Framework Tier Sequence
1. **First check MUST requirements (`.nhi/must/`):**
   - These define non-negotiable requirements and constraints.
   - Read all relevant MUST requirements completely before proceeding.
   - Ensure the proposed action fundamentally complies with all applicable MUST requirements.

2. **Next check SHOULD recommendations (`.nhi/should/`):**
   - These provide guidance, patterns, and procedures for implementation.
   - Follow explicit rules and patterns relevant to the task.
   - Apply by priority (lower number = higher priority).
   - Verify alignment with MUST requirements during implementation.

## Common Failure Modes
- Proceeding without checking both tiers
- Checking tiers in incorrect order
- Prioritizing implementation before understanding MUST requirements
- Assuming familiarity without verifying current guidance
- Following SHOULD recommendations that conflict with MUST requirements
- Creating git commits without following relevant format recommendations

## Self-Correction
- When detected missing a tier check, STOP immediately
- Return to the first tier (`MUST` requirements) and proceed methodically
- Document the correction process
- Update internal rules to prevent recurrence